{"version":3,"sources":["screens/send.js","scripts/bitcoincash.js","components/tools/navbars/header.js","screens/balance.js","screens/history.js","screens/receive.js","screens/main.js","screens/settings.js","screens/about.js","App.js","serviceWorker.js","index.js"],"names":["BITBOX","NETWORK","localStorage","getItem","BITBOXSDK","require","restURL","Send","props","_this","Object","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","scanQRCode","console","log","onMaxAmount","onEnterAddress","addr","setState","sendAddr","target","value","onEnterAmount","amount","sendAmount","onSend","loading","_this$state","state","initWallet","seed","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","utxo","hash","bn","privateKey","send","byteCount","_sendAmount","hex","wrap","_context","prev","next","Address","sent","Buffer","bitcore","crypto","Hash","sha256","BN","fromBuffer","PrivateKey","toString","txId","utxos","txid","outputIndex","vout","address","cashAddress","script","scriptPubKey","satoshis","BitcoinCash","getByteCount","P2PKH","Transaction","from","to","sign","RawTransactions","sendRawTransaction","then","result","err","t0","error","stop","fiatSymbol","_this$state2","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","style","styles","container","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","horizontal","antd__WEBPACK_IMPORTED_MODULE_11__","input","type","size","placeholder","defaultValue","prefix","antd__WEBPACK_IMPORTED_MODULE_12__","suffix","antd__WEBPACK_IMPORTED_MODULE_13__","content","title","onClick","onChange","bind","antd__WEBPACK_IMPORTED_MODULE_14__","button","Component","flex","textAlign","color","maxWidth","margin","marginTop","backgroundColor","padding","__webpack_require__","d","__webpack_exports__","createWallet","bitcore_lib_cash__WEBPACK_IMPORTED_MODULE_0__","bitcore_lib_cash__WEBPACK_IMPORTED_MODULE_0___default","n","Mnemonic","generate","setItem","toAddress","Networks","defaultNetwork","testnet","library","add","faBriefcase","Header","react_default","Navbar","light","NavbarBrand","headerText","className","index_es","icon","NavbarToggler","hamburger","Collapse","isOpen","navbar","Nav","NavItem","NavLink","text","href","alignItems","justifyContent","fontFamily","notification","config","placement","Balance","classCallCheck","possibleConstructorReturn","getPrototypeOf","getPrice","currency","asyncToGenerator","regenerator_default","price","Price","current","abrupt","getBalance","_callee2","details","_context2","bal","Number","balance","unconfirmedBalance","fiatBal","checkNewTx","_callee3","_context3","newPayment","receivedAmount","btn","es_button","openTxDetails","paymentNotification","message","description","concat","duration","info","newBal","symbol","setInterval","box","toFixed","borderBottomLeftRadius","borderBottomRightRadius","mainText","marginBottom","detailsURL","txDetailsURL","History","getTxs","time","txobj","transactions","fetch","res","json","length","map","tx","vin","Date","parseFloat","confirmations","fees","toGMTString","push","cashAddrs","indexOf","sort","b","reverse","isLoading","Divider","display","fontSize","key","spacer","Share","Plugins","Receive","copyAddress","_copy","share","dialogTitle","apply","arguments","copy","renderContent","isMobile","shape","navigator","clipboard","writeText","lib_default","qr","Main","handleChange","toggleNavbar","assertThisInitialized","collapsed","balance_Balance","react_swipeable_views_lib_default","index","resistance","enableMouseEvents","assign","tabs","tab1","tab2","history_History","tab3","receive_Receive","flexDirection","minHeight","overflow","Option","Select","TextArea","Input","FiatCurrency","ticker","DisplayCurrency","Settings","fiatCurrencyToogle","fiatCurrency","displayCurrencyToogle","displayCurrency","displayPriceToggle","checked","importModalToggle","importModal","_this2","ListGroup","ListGroupItem","es_select","width","item","es_switch","defaultChecked","modal","centered","visible","onOk","onCancel","autosize","minRows","maxRows","About","App","react_router_dom","header","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b00427e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport bitcore from \"bitcore-lib-cash\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { Divider } from \"semantic-ui-react\";\nimport { Input, Icon, Button, Popover } from \"antd\";\n\nlet NETWORK = localStorage.getItem(\"network\");\n\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nlet BITBOX;\nlet utxoURL;\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n  utxoURL = \"https://trest.bitcoin.com/v2/address/utxo/\";\n} else {\n  BITBOX = new BITBOXSDK();\n  utxoURL = \"https://rest.bitcoin.com/v2/address/utxo/\";\n}\n\nexport default class Send extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      sendAddr: \"\",\n      sendAmount: \"\",\n      fiatSymbol: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let fiatSymbol = localStorage.getItem(\"fiat-symbol\");\n    if (!fiatSymbol) {\n      fiatSymbol = \"₹\";\n    }\n    this.setState({\n      fiatSymbol\n    });\n  }\n\n  scanQRCode = () => {\n    console.log(\"Scan\");\n  };\n\n  onMaxAmount = () => {\n    console.log(\"Max Amount\");\n  };\n\n  onEnterAddress = addr => {\n    this.setState({\n      sendAddr: addr.target.value\n    });\n  };\n\n  onEnterAmount = amount => {\n    this.setState({\n      sendAmount: amount.target.value\n    });\n  };\n\n  onSend = () => {\n    this.setState({ loading: true });\n    let { sendAddr, sendAmount } = this.state;\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    let seed = localStorage.getItem(\"wallet\")(async () => {\n      try {\n        //Get the utxo details of the address\n        let utxo = await BITBOX.Address.utxo(addr);\n\n        // Get the wallet's private key\n        let value = new Buffer(seed);\n        let hash = bitcore.crypto.Hash.sha256(value);\n        let bn = bitcore.crypto.BN.fromBuffer(hash);\n        let privateKey = new bitcore.PrivateKey(bn).toString();\n\n        // Add inputs for the transaction\n        let send = {\n          txId: utxo.utxos[0].txid,\n          outputIndex: utxo.utxos[0].vout,\n          address: utxo.cashAddress,\n          script: utxo.scriptPubKey,\n          satoshis: utxo.utxos[0].satoshis\n        };\n\n        // Calulate network fee\n        let byteCount = BITBOX.BitcoinCash.getByteCount(\n          { P2PKH: 1 },\n          { P2PKH: 1 }\n        );\n\n        // Subtract fee from amount to send\n        let sendAmount = utxo.utxos[0].satoshis - byteCount;\n\n        // Get the hex of transaction\n        let hex = new bitcore.Transaction()\n          .from(send)\n          .to(sendAddr, sendAmount)\n          .sign(privateKey);\n        console.log(hex.toString());\n\n        // Broadcast the transaction\n        BITBOX.RawTransactions.sendRawTransaction(hex.toString()).then(\n          result => {\n            console.log(result);\n          },\n          err => {\n            console.log(err);\n          }\n        );\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n    this.setState({ loading: false });\n  };\n\n  render() {\n    let { sendAddr, sendAmount, loading } = this.state;\n    let fiatSymbol = localStorage.getItem(\"fiat-symbol\");\n    if (!fiatSymbol) {\n      fiatSymbol = \"₹\";\n    }\n\n    return (\n      <div style={styles.container}>\n        <Divider horizontal>Send</Divider>\n        <Input\n          style={styles.input}\n          type=\"text\"\n          size=\"large\"\n          placeholder=\"Address\"\n          defaultValue=\"bitcoincash:\"\n          prefix={<Icon type=\"user\" />}\n          suffix={\n            <div>\n              <Popover\n                content=\"Click to open camera and scan a qr code\"\n                title=\"Scan QR Code\"\n              >\n                <Icon type=\"scan\" onClick={this.scanQRCode} />\n              </Popover>\n            </div>\n          }\n          value={sendAddr}\n          onChange={this.onEnterAddress.bind(this)}\n        />\n        <Input\n          style={styles.input}\n          type=\"number\"\n          size=\"large\"\n          placeholder=\"Amount\"\n          prefix=\"$\"\n          suffix={\n            <div>\n              <Popover\n                content=\"Click to send all funds from the wallet\"\n                title=\"Max Amount\"\n              >\n                <Icon type=\"to-top\" onClick={this.onMaxAmount} />\n              </Popover>\n            </div>\n          }\n          value={sendAmount}\n          onChange={this.onEnterAmount.bind(this)}\n        />\n        <Button\n          style={styles.button}\n          size=\"large\"\n          type=\"primary\"\n          loading={loading}\n          onClick={this.onSend}\n        >\n          Send\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    textAlign: \"center\",\n    color: \"black\",\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  },\n  input: {\n    marginTop: \"10px\"\n  },\n  button: {\n    backgroundColor: \"#0492CE\",\n    color: \"white\",\n    marginTop: \"15px\",\n    padding: \"0 50px\"\n  }\n};\n","import bitcore from \"bitcore-lib-cash\";\n\nlet NETWORK = localStorage.getItem(\"network\");\nif (!NETWORK) {\n  NETWORK = \"testnet\";\n}\n\nlet BITBOX;\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n  bitcore.Networks.defaultNetwork = bitcore.Networks.testnet;\n} else {\n  BITBOX = new BITBOXSDK();\n}\n\nexport function createWallet() {\n  let seed = BITBOX.Mnemonic.generate(128);\n  if (!seed) {\n    console.log(\"Network Error: New wallet could not be created\");\n    return false;\n  }\n  localStorage.setItem(\"wallet\", seed);\n  return seed;\n}\n\nexport function initWallet(seed) {\n  if (!seed) {\n    console.log(\"Error: No seed detected\");\n    return false;\n  }\n  //let seedBuffer = BITBOX.Mnemonic.toSeed(seed);\n  // let hdNode = BITBOX.HDNode.fromSeed(seedBuffer, \"testnet\");\n  // let account = BITBOX.HDNode.derivePath(hdNode, \"m/44'/145'/0'\");\n  // let change = BITBOX.HDNode.derivePath(account, \"0/0\");\n  // let cashAddress = BITBOX.HDNode.toCashAddress(change);\n  var value = new Buffer(seed);\n  let hash = bitcore.crypto.Hash.sha256(value);\n  let bn = bitcore.crypto.BN.fromBuffer(hash);\n  var address = new bitcore.PrivateKey(bn).toAddress();\n  let cashAddress = address.toString();\n  return cashAddress;\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faBriefcase);\n\nconst Header = props => {\n  return (\n    <div>\n      <Navbar style={styles.container} light>\n        <NavbarBrand style={styles.headerText} className=\"mr-auto\">\n          <FontAwesomeIcon icon=\"briefcase\" /> Briefcase\n        </NavbarBrand>\n        <NavbarToggler\n          style={styles.hamburger}\n          onClick={props.onClick}\n          className=\"mr-1\"\n        />\n        <Collapse isOpen={props.isOpen} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink style={styles.text} href=\"/\">\n                Wallet\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink style={styles.text} href=\"/settings\">\n                Settings\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink style={styles.text} href=\"/about\">\n                About\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n\nconst styles = {\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#0492CE\"\n  },\n  headerText: {\n    color: \"white\",\n    fontFamily: \"Righteous\"\n  },\n  text: {\n    color: \"white\"\n  },\n  hamburger: {\n    backgroundColor: \"white\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { notification, Button } from \"antd\";\n\nlet NETWORK = localStorage.getItem(\"network\");\nif (!NETWORK) {\n  NETWORK = \"testnet\";\n}\n\nlet BITBOX;\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n} else {\n  BITBOX = new BITBOXSDK();\n}\n\nnotification.config({\n  placement: \"bottomRight\"\n});\n\nexport default class Balance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bal: 0,\n      fiatBal: 0,\n      newBal: 0,\n      symbol: \"₿\",\n      fiatSymbol: \"₹\",\n      price: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    this.getPrice();\n    this.getBalance(addr);\n  }\n\n  componentDidMount() {\n    setInterval(this.getPrice, 10000);\n    setInterval(this.checkNewTx, 10000);\n  }\n\n  getPrice = () => {\n    let currency = localStorage.getItem(\"currency\");\n    if (!currency) {\n      currency = \"INR\";\n    }\n    (async () => {\n      try {\n        let price = await BITBOX.Price.current(currency);\n        if (!price) {\n          console.log(\"Network Error: Price cannot be fetched\");\n          return false;\n        }\n        this.setState({\n          price\n        });\n        return true;\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  };\n\n  getBalance = addr => {\n    (async () => {\n      try {\n        let details = await BITBOX.Address.details(addr);\n        let price = this.state.price;\n        this.setState({\n          bal: Number(details.balance + details.unconfirmedBalance),\n          fiatBal: (details.balance + details.unconfirmedBalance) * price\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  };\n\n  checkNewTx = () => {\n    (async () => {\n      try {\n        let addr = initWallet(localStorage.getItem(\"wallet\"));\n        let details = await BITBOX.Address.details(addr);\n        let price = this.state.price;\n        if (details.balance + details.unconfirmedBalance > this.state.bal) {\n          console.log(\"New payment received\");\n          this.setState({\n            bal: Number(details.balance + details.unconfirmedBalance),\n            fiatBal: (details.balance + details.unconfirmedBalance) * price\n          });\n        } else if (\n          details.balance + details.unconfirmedBalance <\n          this.state.bal\n        ) {\n          console.log(\"Payment sent\");\n          this.setState({\n            bal: Number(details.balance + details.unconfirmedBalance),\n            fiatBal: (details.balance + details.unconfirmedBalance) * price\n          });\n        } else {\n          this.setState({\n            fiatBal: (details.balance + details.unconfirmedBalance) * price\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  };\n\n  newPayment = () => {\n    let { receivedAmount } = this.state;\n    const btn = (\n      <Button type=\"primary\" size=\"small\" onClick={this.openTxDetails}>\n        Details\n      </Button>\n    );\n    const paymentNotification = {\n      message: \"New Payment Received\",\n      description: `Amount: ${receivedAmount}`,\n      duration: 0,\n      btn\n    };\n    notification.info(paymentNotification);\n  };\n\n  openTxDetails = () => {\n    console.log(\"Hi\");\n  };\n\n  render() {\n    let { bal, fiatBal, symbol, fiatSymbol } = this.state;\n    return (\n      <div style={styles.container}>\n        <div style={styles.box}>\n          <h2 style={styles.text} className=\"display-4\">\n            {fiatSymbol}\n            {fiatBal.toFixed(2)}\n          </h2>\n          <h3 style={styles.text}>\n            {symbol}\n            {bal.toFixed(8)}\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    backgroundColor: \"#0492CE\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"Questrial\",\n    borderBottomLeftRadius: \"50px\",\n    borderBottomRightRadius: \"50px\"\n  },\n  text: {\n    color: \"white\",\n    margin: \"0px\"\n  },\n  mainText: {\n    color: \"white\",\n    fontFamily: \"Questrial\",\n    marginBottom: \"0\"\n  },\n  box: {\n    marginTop: \"40px\",\n    marginBottom: \"20px\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { Divider } from \"semantic-ui-react\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { Icon } from \"antd\";\n\nlet NETWORK = localStorage.getItem(\"network\");\nif (!NETWORK) {\n  NETWORK = \"testnet\";\n}\n\nlet BITBOX;\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nlet detailsURL;\nlet txDetailsURL;\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n  detailsURL = \"https://trest.bitcoin.com/v2/address/details/\";\n  txDetailsURL = \"https://trest.bitcoin.com/v2/transaction/details/\";\n} else {\n  BITBOX = new BITBOXSDK();\n  detailsURL = \"https://rest.bitcoin.com/v2/address/details/\";\n  txDetailsURL = \"https://rest.bitcoin.com/v2/transaction/details/\";\n}\n\nexport default class History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      transactions: [],\n      details: [],\n      price: \"\",\n      fiatSymbol: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let fiatSymbol = localStorage.getItem(\"fiat-symbol\");\n    if (!fiatSymbol) {\n      fiatSymbol = \"₹\";\n    }\n    this.setState({\n      fiatSymbol\n    });\n    this.getPrice();\n  }\n\n  componentDidMount() {\n    //setInterval(this.getPrice, 1000);\n  }\n\n  getPrice = () => {\n    let currency = localStorage.getItem(\"currency\");\n    if (!currency) {\n      currency = \"INR\";\n    }\n    (async () => {\n      try {\n        let price = await BITBOX.Price.current(currency);\n        if (!price) {\n          console.log(\"Network Error: Price cannot be fetched\");\n          return false;\n        }\n        this.getTxs(price);\n        this.setState({ loading: false });\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  };\n\n  getTxs = price => {\n    this.setState({ loading: true });\n    let time;\n    let txobj = {};\n    let transactions = [];\n    let amount = 0;\n    let address = [];\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    fetch(detailsURL + addr)\n      .then(res => res.json())\n      .then(json => {\n        if (!json) {\n          console.log(\"Error: Network Error\");\n        } else if (json.transactions.length < 1) {\n          console.log(\"No Transactions Found\");\n        } else {\n          json.transactions.map(tx => {\n            fetch(txDetailsURL + tx)\n              .then(res => res.json())\n              .then(json => {\n                if (json.vin[0].cashAddress === addr) {\n                  time = new Date(json.time * 1000);\n                  amount = json.vout[0].value;\n                  txobj = {\n                    type: \"Sent\",\n                    amount: parseFloat(amount * price).toFixed(2),\n                    confirmations: json.confirmations,\n                    fees: json.fees,\n                    txid: json.txid,\n                    time: time.toGMTString()\n                  };\n                  transactions.push(txobj);\n                } else {\n                  time = new Date(json.time * 1000);\n                  json.vout.map(vout => {\n                    if (!vout.scriptPubKey.cashAddrs) {\n                      return false;\n                    }\n                    address = vout.scriptPubKey.cashAddrs;\n                    if (address.indexOf(addr) > -1) {\n                      amount = vout.value;\n                    }\n                    return true;\n                  });\n                  txobj = {\n                    type: \"Received\",\n                    amount: parseFloat(amount * price).toFixed(2),\n                    confirmations: json.confirmations,\n                    fees: json.fees,\n                    txid: json.txid,\n                    time: time.toGMTString()\n                  };\n                  transactions.push(txobj);\n                }\n                transactions = transactions\n                  .sort(function(a, b) {\n                    return new Date(a.time) - new Date(b.time);\n                  })\n                  .reverse();\n                this.setState({\n                  transactions: transactions,\n                  isLoading: false\n                });\n              });\n          });\n        }\n      });\n  };\n\n  render() {\n    let { fiatSymbol, transactions } = this.state;\n    return (\n      <div style={styles.container}>\n        <Divider horizontal>History</Divider>\n        {transactions.map(tx => (\n          <div\n            style={{\n              textAlign: \"center\",\n              display: \"flex\",\n              margin: \"10px\",\n              color: tx.type === \"Sent\" ? \"red\" : \"green\",\n              fontSize: \"1.2rem\"\n            }}\n            key={tx.txid}\n          >\n            {tx.type === \"Sent\" ? <Icon type=\"rise\" /> : <Icon type=\"fall\" />}\n            <div style={styles.spacer} /> {tx.type}\n            <div style={styles.spacer} /> {fiatSymbol}\n            {tx.amount}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    color: \"black\",\n    alignItems: \"center\",\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  },\n  spacer: {\n    flex: 1\n  }\n};\n","import React, { Component } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { Divider } from \"semantic-ui-react\";\nimport { Button } from \"antd\";\nimport { Plugins } from \"@capacitor/core\";\nimport { isMobile } from \"react-device-detect\";\n\nconst { Share } = Plugins;\n\nexport default class Receive extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addr: \"\",\n      bal: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    this.setState({\n      addr\n    });\n  }\n\n  copyAddress = () => {\n    let { addr } = this.state;\n    async function copy() {\n      try {\n        await Share.share({\n          title: \"Share\",\n          text: addr,\n          dialogTitle: \"Share your bitcoin cash address\"\n        });\n      } catch (err) {}\n    }\n    copy();\n    console.log(\"Address copied\");\n  };\n\n  renderContent = () => {\n    let { addr } = this.state;\n    if (isMobile) {\n      return (\n        <div>\n          <Button\n            style={styles.button}\n            shape=\"round\"\n            onClick={this.copyAddress}\n          >\n            Share\n          </Button>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Button\n          style={styles.button}\n          onClick={() => navigator.clipboard.writeText(addr)}\n        >\n          Copy\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    let { addr } = this.state;\n    return (\n      <div style={styles.container}>\n        <Divider horizontal>Receive</Divider>\n        <div>\n          <h4>Your Bitcoin Cash Address:</h4>\n          <QRCode style={styles.qr} value={addr} />\n          <div>{addr}</div>\n          <div>{this.renderContent()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    textAlign: \"center\",\n    color: \"black\",\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  },\n  button: {\n    backgroundColor: \"#0492CE\",\n    color: \"white\",\n    marginTop: \"10px\",\n    padding: \"0 50px\"\n  },\n  qr: {\n    marginTop: \"5px\"\n  }\n};\n","import React, { Component } from \"react\";\nimport Balance from \"./balance\";\nimport History from \"./history\";\nimport Send from \"./send\";\nimport Receive from \"./receive\";\nimport SwipeableViews from \"react-swipeable-views\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: false,\n      value: 0,\n      addr: \"\"\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <Balance />\n        <div>\n          <SwipeableViews index={1} resistance enableMouseEvents>\n            <div style={Object.assign({}, styles.tabs, styles.tab1)}>\n              <Send />\n            </div>\n            <div style={Object.assign({}, styles.tabs, styles.tab2)}>\n              <History />\n            </div>\n            <div style={Object.assign({}, styles.tabs, styles.tab3)}>\n              <Receive />\n            </div>\n          </SwipeableViews>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    textAlign: \"center\",\n    fontFamily: \"Questrial\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  tabs: {\n    padding: 15,\n    minHeight: 100,\n    color: \"#fff\"\n  },\n  tab1: {\n    backgroundColor: \"white\"\n  },\n  tab2: {\n    backgroundColor: \"white\",\n    overflow: \"\"\n  },\n  tab3: {\n    backgroundColor: \"white\",\n    overflow: \"hidden\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Switch, Select, Icon, Modal, Input } from \"antd\";\n\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\nconst FiatCurrency = [\n  {\n    currency: \"Indian Rupee\",\n    ticker: \"INR\",\n    symbol: \"₹\"\n  },\n  {\n    currency: \"United States Dollar\",\n    ticker: \"USD\",\n    symbol: \"$\"\n  }\n];\nconst DisplayCurrency = [\"Fiat\", \"Bitcoin Cash\"];\n\nexport default class Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fiatCurrency: \"\",\n      displayCurrency: \"\",\n      importModal: false\n    };\n  }\n\n  componentWillMount() {\n    let fiatCurrency = localStorage.getItem(\"fiat-currency\");\n    let displayCurrency = localStorage.getItem(\"display-currency\");\n    if (!fiatCurrency) {\n      fiatCurrency = \"INR\";\n    } else if (!displayCurrency) {\n      displayCurrency = \"Fiat\";\n    }\n    this.setState({\n      fiatCurrency,\n      displayCurrency\n    });\n  }\n\n  fiatCurrencyToogle = value => {\n    this.setState({\n      fiatCurrency: value\n    });\n    localStorage.setItem(\"fiat-currency\", value);\n  };\n\n  displayCurrencyToogle = value => {\n    this.setState({\n      displayCurrency: value\n    });\n    localStorage.setItem(\"display-currency\", value);\n  };\n\n  displayPriceToggle = checked => {\n    if (checked) {\n      localStorage.setItem(\"display-price\", \"On\");\n    } else {\n      localStorage.setItem(\"display-price\", \"Off\");\n    }\n  };\n\n  importModalToggle = importModal => {\n    this.setState({\n      importModal\n    });\n  };\n\n  render() {\n    let { fiatCurrency, displayCurrency } = this.state;\n    return (\n      <div>\n        <ListGroup>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Fiat Currency</div>\n              <div style={styles.spacer} />\n              <div>\n                <Select\n                  defaultValue={fiatCurrency}\n                  style={{ width: 80 }}\n                  onChange={this.fiatCurrencyToogle}\n                >\n                  {FiatCurrency.map(item => (\n                    <Option key={item.ticker} value={item.ticker}>\n                      {item.ticker}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Display Currency</div>\n              <div style={styles.spacer} />\n              <Select\n                defaultValue={displayCurrency}\n                style={{ width: 120 }}\n                onChange={this.displayCurrencyToogle}\n              >\n                {DisplayCurrency.map(item => (\n                  <Option key={item} value={item}>\n                    {item}\n                  </Option>\n                ))}\n              </Select>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Display Price</div>\n              <div style={styles.spacer} />\n              <div>\n                <Switch defaultChecked onChange={this.displayPriceToggle} />\n              </div>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Import/Recover Wallet</div>\n              <div style={styles.spacer} />\n              <div>\n                <Icon\n                  type=\"right\"\n                  onClick={() => this.importModalToggle(true)}\n                />\n                <Modal\n                  title=\"Import/Recover Wallet\"\n                  centered\n                  visible={this.state.importModal}\n                  onOk={() => this.importModalToggle(false)}\n                  onCancel={() => this.importModalToggle(false)}\n                >\n                  <TextArea\n                    placeholder=\"Enter the seed to recover your wallet\"\n                    autosize={{\n                      minRows: 3,\n                      maxRows: 6\n                    }}\n                  />\n                </Modal>\n              </div>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>Advanced</ListGroupItem>\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  spacer: {\n    flex: 1\n  }\n};\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div style={styles.container}>\n        <h3>About Bitcoin Cash:</h3>\n        <p>\n          Bitcoin Cash is a peer-to-peer electronic cash system. It's a\n          permissionless, decentralized cryptocurrency that requires no trusted\n          third parties and no central bank.\n        </p>\n        <hr className=\"my-2\" />\n        <h3>Key Features:</h3>\n        <ol>\n          <li>Fast</li>\n          <li>Reliable</li>\n          <li>Low Fees</li>\n          <li>Simple</li>\n          <li>Stable</li>\n          <li>Secure</li>\n        </ol>\n        <hr className=\"my-2\" />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    padding: \"10px\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/tools/navbars/header\";\nimport Main from \"./screens/main\";\nimport Settings from \"./screens/settings\";\nimport About from \"./screens/about\";\nimport { createWallet, initWallet } from \"./scripts/bitcoincash\";\n\nlocalStorage.setItem(\"network\", \"testnet\");\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: false,\n      value: 0,\n      addr: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let wallet = localStorage.getItem(\"wallet\");\n    if (!wallet) {\n      console.log(\"No wallet detected\");\n      let seed = createWallet();\n      console.log(\"New wallet created: \" + seed);\n    }\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    this.setState({\n      addr\n    });\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div style={styles.container}>\n          <Header isOpen={this.state.collapsed} onClick={this.toggleNavbar} />\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/settings/\" component={Settings} />\n          <Route path=\"/about/\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    fontFamily: \"Questrial\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    minHeight: \"100vh\"\n  },\n  spacer: {\n    flex: \"1\"\n  },\n  tabs: {\n    padding: 15,\n    minHeight: 100,\n    color: \"#fff\"\n  },\n  tab1: {\n    backgroundColor: \"white\"\n  },\n  tab2: {\n    backgroundColor: \"white\",\n    overflow: \"\"\n  },\n  tab3: {\n    backgroundColor: \"white\",\n    overflow: \"hidden\"\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}