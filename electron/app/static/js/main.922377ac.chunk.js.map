{"version":3,"sources":["screens/send.js","scripts/bitcoincash.js","components/tools/navbars/header.js","screens/balance.js","screens/history.js","screens/receive.js","screens/main.js","screens/settings.js","screens/about.js","App.js","serviceWorker.js","index.js"],"names":["BITBOX","NETWORK","localStorage","getItem","BITBOXSDK","require","restURL","Send","props","_this","Object","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","scanQRCode","console","log","onMaxAmount","onEnterAddress","addr","setState","sendAddr","target","value","onEnterAmount","amount","sendAmount","onSend","loading","currency","price","seed","utxo","hash","bn","privateKey","transaction","byteCount","details","hex","_this$state","state","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_Radical_Documents_VisualStudio_Projects_Briefcase_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee2","wrap","_context2","prev","next","Price","current","sent","abrupt","BitcoinCash","toSatoshi","toFixed","initWallet","_callee","_context","Address","bitcore","Transaction","Buffer","crypto","Hash","sha256","BN","fromBuffer","PrivateKey","toString","utxos","map","res","txId","txid","outputIndex","vout","address","cashAddress","script","scriptPubKey","satoshis","from","getByteCount","P2PKH","change","fee","to","sign","serialize","RawTransactions","sendRawTransaction","then","result","err","t0","error","stop","fiatSymbol","isContacts","_this$state2","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","style","styles","container","semantic_ui_react__WEBPACK_IMPORTED_MODULE_10__","horizontal","antd__WEBPACK_IMPORTED_MODULE_11__","input","type","size","placeholder","defaultValue","prefix","antd__WEBPACK_IMPORTED_MODULE_12__","onChange","bind","antd__WEBPACK_IMPORTED_MODULE_13__","button","onClick","block","Component","flex","textAlign","color","maxWidth","margin","marginTop","backgroundColor","padding","buttonRound","marginLeft","row","display","__webpack_require__","d","__webpack_exports__","createWallet","bitcore_lib_cash__WEBPACK_IMPORTED_MODULE_0__","bitcore_lib_cash__WEBPACK_IMPORTED_MODULE_0___default","n","Mnemonic","generate","setItem","toAddress","Networks","defaultNetwork","testnet","library","add","faBriefcase","Header","react_default","Navbar","light","NavbarBrand","headerText","className","index_es","icon","NavbarToggler","hamburger","Collapse","isOpen","navbar","Nav","NavItem","NavLink","text","href","alignItems","justifyContent","fontFamily","notification","config","placement","Balance","classCallCheck","possibleConstructorReturn","getPrototypeOf","getPrice","asyncToGenerator","regenerator_default","getBalance","bal","Number","balance","unconfirmedBalance","fiatBal","checkNewTx","_callee3","_context3","newPayment","receivedAmount","btn","es_button","openTxDetails","paymentNotification","message","description","concat","duration","info","newBal","symbol","setInterval","box","borderBottomLeftRadius","borderBottomRightRadius","mainText","marginBottom","detailsURL","txDetailsURL","History","getTxs","time","txobj","transactions","fetch","json","length","tx","vin","Date","parseFloat","confirmations","fees","toGMTString","push","cashAddrs","indexOf","sort","b","reverse","isLoading","Divider","fontSize","key","spacer","Share","Plugins","Receive","copyAddress","_copy","share","title","dialogTitle","apply","arguments","copy","renderCopyButton","isMobile","navigator","clipboard","writeText","lib_default","qr","Main","handleChange","toggleNavbar","assertThisInitialized","collapsed","balance_Balance","react_swipeable_views_lib_default","index","resistance","enableMouseEvents","assign","tabs","tab1","send","tab2","history_History","tab3","receive_Receive","flexDirection","minHeight","overflow","Option","Select","TextArea","Input","FiatCurrency","ticker","DisplayCurrency","Settings","fiatCurrencyToogle","fiatCurrency","displayCurrencyToogle","displayCurrency","displayPriceToggle","checked","importModalToggle","importModal","onSeedEnter","item","importSeed","_this2","ListGroup","ListGroupItem","es_select","width","es_switch","defaultChecked","modal","centered","visible","onOk","onCancel","autosize","minRows","maxRows","About","App","react_router_dom","header","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.922377ac.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport bitcore from \"bitcore-lib-cash\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { Divider } from \"semantic-ui-react\";\nimport { Input, Button, Icon } from \"antd\";\n\nlet NETWORK = localStorage.getItem(\"network\");\n\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nlet BITBOX;\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n} else {\n  BITBOX = new BITBOXSDK();\n}\n\nexport default class Send extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      sendAddr: \"\",\n      sendAmount: \"\",\n      fiatSymbol: \"\",\n      isContacts: false\n    };\n  }\n\n  componentWillMount() {\n    let fiatSymbol = localStorage.getItem(\"fiat-symbol\");\n    if (!fiatSymbol) {\n      fiatSymbol = \"₹\";\n    }\n    this.setState({\n      fiatSymbol\n    });\n  }\n\n  scanQRCode = () => {\n    console.log(\"Scan\");\n  };\n\n  onMaxAmount = () => {\n    console.log(\"Max Amount\");\n  };\n\n  onEnterAddress = addr => {\n    this.setState({\n      sendAddr: addr.target.value\n    });\n  };\n\n  onEnterAmount = amount => {\n    this.setState({\n      sendAmount: amount.target.value\n    });\n  };\n\n  onSend = () => {\n    this.setState({ loading: true });\n    let { sendAddr, sendAmount } = this.state;\n    if (!sendAddr) {\n      this.setState({ loading: false });\n      return console.log(\"Enter the address\");\n    } else if (!sendAmount) {\n      this.setState({ loading: false });\n      return console.log(\"Enter the amount\");\n    }\n    let currency,\n      price,\n      addr,\n      seed,\n      utxo,\n      value,\n      hash,\n      bn,\n      privateKey,\n      transaction,\n      byteCount,\n      details,\n      change,\n      hex;\n    currency = localStorage.getItem(\"currency\");\n    if (!currency) {\n      currency = \"INR\";\n    }\n    (async () => {\n      try {\n        // Get current BCH price\n        price = await BITBOX.Price.current(currency);\n        if (!price) {\n          this.setState({ loading: false });\n          return console.log(\"Network Error: Price cannot be fetched\");\n        }\n        // Convert fiat amount to bch amount\n        sendAmount /= price;\n        // Convert BCH to satoshis\n        sendAmount = BITBOX.BitcoinCash.toSatoshi(sendAmount.toFixed(8));\n        addr = initWallet(localStorage.getItem(\"wallet\"));\n        seed = localStorage.getItem(\"wallet\");\n        (async () => {\n          try {\n            //Get the utxo details of the address\n            utxo = await BITBOX.Address.utxo(addr);\n            //console.log(utxo);\n            // Create a transaction object\n            transaction = new bitcore.Transaction();\n\n            // Get the wallet's private key\n            value = new Buffer(seed);\n            hash = bitcore.crypto.Hash.sha256(value);\n            bn = bitcore.crypto.BN.fromBuffer(hash);\n            privateKey = new bitcore.PrivateKey(bn).toString();\n\n            // Add inputs for the transaction\n            utxo.utxos.map(res => {\n              details = {\n                txId: res.txid,\n                outputIndex: res.vout,\n                address: utxo.cashAddress,\n                script: utxo.scriptPubKey,\n                satoshis: res.satoshis\n              };\n              transaction.from(details);\n              if (sendAmount < res.satoshis) {\n                return false;\n              }\n              return true;\n            });\n\n            // Calulate network fee\n            change = details.satoshis - sendAmount;\n            if (change > 0) {\n              byteCount = BITBOX.BitcoinCash.getByteCount(\n                { P2PKH: 1 },\n                { P2PKH: 2 }\n              );\n              //If change exists send change to self\n              transaction.change(addr);\n            } else {\n              byteCount = BITBOX.BitcoinCash.getByteCount(\n                { P2PKH: 1 },\n                { P2PKH: 1 }\n              );\n            }\n            // Add fee to transaction\n            transaction\n              .fee(byteCount)\n              // Add the receiving address and amount\n              .to(sendAddr, sendAmount)\n              // Sign the transaction\n              .sign(privateKey);\n            // Get the hex of the transaction\n            hex = transaction.serialize();\n            if (transaction) {\n              //Broadcast the transaction\n              BITBOX.RawTransactions.sendRawTransaction(hex).then(\n                result => {\n                  console.log(result);\n                  return this.setState({\n                    loading: false\n                  });\n                },\n                err => {\n                  console.log(err);\n                  return this.setState({ loading: false });\n                }\n              );\n            } else {\n              console.log(\"Error: Transaction failed\");\n              return this.setState({ loading: false });\n            }\n          } catch (error) {\n            console.error(error);\n            return this.setState({ loading: false });\n          }\n        })();\n      } catch (error) {\n        console.error(error);\n        return this.setState({ loading: false });\n      }\n    })();\n  };\n\n  render() {\n    let { sendAddr, sendAmount, loading, fiatSymbol, isContacts } = this.state;\n    return (\n      <div style={styles.container}>\n        <Divider horizontal>Send</Divider>\n        <Input\n          style={styles.input}\n          type=\"text\"\n          size=\"large\"\n          placeholder=\"Address\"\n          defaultValue=\"bitcoincash:\"\n          prefix={<Icon type=\"user\" />}\n          value={sendAddr}\n          onChange={this.onEnterAddress.bind(this)}\n        />\n        <Input\n          style={styles.input}\n          type=\"number\"\n          size=\"large\"\n          placeholder=\"Amount\"\n          prefix={fiatSymbol}\n          value={sendAmount}\n          onChange={this.onEnterAmount.bind(this)}\n        />\n        <Button\n          style={styles.button}\n          size=\"large\"\n          type=\"primary\"\n          loading={loading}\n          onClick={this.onSend}\n        >\n          Send\n        </Button>\n        <div>\n          <Button style={styles.button} block type=\"primary\" size=\"large\">\n            Contacts\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    textAlign: \"center\",\n    color: \"black\",\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  },\n  input: {\n    marginTop: \"10px\"\n  },\n  button: {\n    backgroundColor: \"#0492CE\",\n    color: \"white\",\n    marginTop: \"15px\",\n    padding: \"0 50px\"\n  },\n  buttonRound: {\n    backgroundColor: \"#0492CE\",\n    color: \"white\",\n    marginTop: \"13px\",\n    marginLeft: \"5px\"\n  },\n  row: {\n    display: \"flex\"\n  }\n};\n","import bitcore from \"bitcore-lib-cash\";\n\nlet NETWORK = localStorage.getItem(\"network\");\nif (!NETWORK) {\n  NETWORK = \"testnet\";\n}\n\nlet BITBOX;\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n  bitcore.Networks.defaultNetwork = bitcore.Networks.testnet;\n} else {\n  BITBOX = new BITBOXSDK();\n}\n\nexport function createWallet() {\n  let seed = BITBOX.Mnemonic.generate(128);\n  if (!seed) {\n    console.log(\"Network Error: New wallet could not be created\");\n    return false;\n  }\n  localStorage.setItem(\"wallet\", seed);\n  return seed;\n}\n\nexport function initWallet(seed) {\n  if (!seed) {\n    console.log(\"Error: No seed detected\");\n    return false;\n  }\n  //let seedBuffer = BITBOX.Mnemonic.toSeed(seed);\n  // let hdNode = BITBOX.HDNode.fromSeed(seedBuffer, \"testnet\");\n  // let account = BITBOX.HDNode.derivePath(hdNode, \"m/44'/145'/0'\");\n  // let change = BITBOX.HDNode.derivePath(account, \"0/0\");\n  // let cashAddress = BITBOX.HDNode.toCashAddress(change);\n  var value = new Buffer(seed);\n  let hash = bitcore.crypto.Hash.sha256(value);\n  let bn = bitcore.crypto.BN.fromBuffer(hash);\n  var address = new bitcore.PrivateKey(bn).toAddress();\n  let cashAddress = address.toString();\n  return cashAddress;\n}\n","import React from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faBriefcase } from \"@fortawesome/free-solid-svg-icons\";\n\nlibrary.add(faBriefcase);\n\nconst Header = props => {\n  return (\n    <div>\n      <Navbar style={styles.container} light>\n        <NavbarBrand style={styles.headerText} className=\"mr-auto\">\n          <FontAwesomeIcon icon=\"briefcase\" /> Briefcase\n        </NavbarBrand>\n        <NavbarToggler\n          style={styles.hamburger}\n          onClick={props.onClick}\n          className=\"mr-1\"\n        />\n        <Collapse isOpen={props.isOpen} navbar>\n          <Nav navbar>\n            <NavItem>\n              <NavLink style={styles.text} href=\"/\">\n                Wallet\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink style={styles.text} href=\"/settings\">\n                Settings\n              </NavLink>\n            </NavItem>\n            <NavItem>\n              <NavLink style={styles.text} href=\"/about\">\n                About\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </div>\n  );\n};\n\nexport default Header;\n\nconst styles = {\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: \"#0492CE\"\n  },\n  headerText: {\n    color: \"white\",\n    fontFamily: \"Righteous\"\n  },\n  text: {\n    color: \"white\"\n  },\n  hamburger: {\n    backgroundColor: \"white\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { notification, Button } from \"antd\";\n\nlet NETWORK = localStorage.getItem(\"network\");\nif (!NETWORK) {\n  NETWORK = \"testnet\";\n}\n\nlet BITBOX;\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n} else {\n  BITBOX = new BITBOXSDK();\n}\n\nnotification.config({\n  placement: \"bottomRight\"\n});\n\nexport default class Balance extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      bal: 0,\n      fiatBal: 0,\n      newBal: 0,\n      symbol: \"₿\",\n      fiatSymbol: \"₹\",\n      price: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    this.getPrice();\n    this.getBalance(addr);\n  }\n\n  componentDidMount() {\n    setInterval(this.getPrice, 100000);\n    setInterval(this.checkNewTx, 10000);\n  }\n\n  getPrice = () => {\n    let currency = localStorage.getItem(\"currency\");\n    if (!currency) {\n      currency = \"INR\";\n    }\n    (async () => {\n      try {\n        let price = await BITBOX.Price.current(currency);\n        if (!price) {\n          console.log(\"Network Error: Price cannot be fetched\");\n          return false;\n        }\n        this.setState({\n          price\n        });\n        return true;\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  };\n\n  getBalance = addr => {\n    (async () => {\n      try {\n        let details = await BITBOX.Address.details(addr);\n        let price = this.state.price;\n        this.setState({\n          bal: Number(details.balance + details.unconfirmedBalance),\n          fiatBal: (details.balance + details.unconfirmedBalance) * price\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  };\n\n  checkNewTx = () => {\n    (async () => {\n      try {\n        let addr = initWallet(localStorage.getItem(\"wallet\"));\n        let details = await BITBOX.Address.details(addr);\n        let price = this.state.price;\n        if (details.balance + details.unconfirmedBalance > this.state.bal) {\n          console.log(\"New payment received\");\n          this.setState({\n            bal: Number(details.balance + details.unconfirmedBalance),\n            fiatBal: (details.balance + details.unconfirmedBalance) * price\n          });\n        } else if (\n          details.balance + details.unconfirmedBalance <\n          this.state.bal\n        ) {\n          console.log(\"Payment sent\");\n          this.setState({\n            bal: Number(details.balance + details.unconfirmedBalance),\n            fiatBal: (details.balance + details.unconfirmedBalance) * price\n          });\n        } else {\n          this.setState({\n            fiatBal: (details.balance + details.unconfirmedBalance) * price\n          });\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    })();\n  };\n\n  newPayment = () => {\n    let { receivedAmount } = this.state;\n    const btn = (\n      <Button type=\"primary\" size=\"small\" onClick={this.openTxDetails}>\n        Details\n      </Button>\n    );\n    const paymentNotification = {\n      message: \"New Payment Received\",\n      description: `Amount: ${receivedAmount}`,\n      duration: 0,\n      btn\n    };\n    notification.info(paymentNotification);\n  };\n\n  openTxDetails = () => {\n    console.log(\"Hi\");\n  };\n\n  render() {\n    let { bal, fiatBal, symbol, fiatSymbol } = this.state;\n    return (\n      <div style={styles.container}>\n        <div style={styles.box}>\n          <h2 style={styles.text} className=\"display-4\">\n            {fiatSymbol}\n            {fiatBal.toFixed(2)}\n          </h2>\n          <h3 style={styles.text}>\n            {symbol}\n            {bal.toFixed(8)}\n          </h3>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    backgroundColor: \"#0492CE\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    fontFamily: \"Questrial\",\n    borderBottomLeftRadius: \"50px\",\n    borderBottomRightRadius: \"50px\"\n  },\n  text: {\n    color: \"white\",\n    margin: \"0px\"\n  },\n  mainText: {\n    color: \"white\",\n    fontFamily: \"Questrial\",\n    marginBottom: \"0\"\n  },\n  box: {\n    marginTop: \"40px\",\n    marginBottom: \"20px\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { Divider } from \"semantic-ui-react\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { Icon } from \"antd\";\n\nlet NETWORK = localStorage.getItem(\"network\");\nif (!NETWORK) {\n  NETWORK = \"testnet\";\n}\n\nlet BITBOX;\nlet BITBOXSDK = require(\"bitbox-sdk\");\n\nlet detailsURL;\nlet txDetailsURL;\n\nif (NETWORK === \"testnet\") {\n  BITBOX = new BITBOXSDK({\n    restURL: \"https://trest.bitcoin.com/v2/\"\n  });\n  detailsURL = \"https://trest.bitcoin.com/v2/address/details/\";\n  txDetailsURL = \"https://trest.bitcoin.com/v2/transaction/details/\";\n} else {\n  BITBOX = new BITBOXSDK();\n  detailsURL = \"https://rest.bitcoin.com/v2/address/details/\";\n  txDetailsURL = \"https://rest.bitcoin.com/v2/transaction/details/\";\n}\n\nexport default class History extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      transactions: [],\n      details: [],\n      price: \"\",\n      fiatSymbol: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let fiatSymbol = localStorage.getItem(\"fiat-symbol\");\n    if (!fiatSymbol) {\n      fiatSymbol = \"₹\";\n    }\n    this.setState({\n      fiatSymbol\n    });\n    this.getPrice();\n  }\n\n  componentDidMount() {\n    //setInterval(this.getPrice, 5000);\n  }\n\n  getPrice = () => {\n    let currency = localStorage.getItem(\"currency\");\n    if (!currency) {\n      currency = \"INR\";\n    }\n    (async () => {\n      try {\n        let price = await BITBOX.Price.current(currency);\n        if (!price) {\n          console.log(\"Network Error: Price cannot be fetched\");\n          return false;\n        }\n        this.getTxs(price);\n        this.setState({ loading: false });\n      } catch (error) {\n        console.error(error);\n      }\n    })();\n  };\n\n  getTxs = price => {\n    this.setState({ loading: true });\n    let time;\n    let txobj = {};\n    let transactions = [];\n    let amount = 0;\n    let address = [];\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    fetch(detailsURL + addr)\n      .then(res => res.json())\n      .then(json => {\n        if (!json) {\n          console.log(\"Error: Network Error\");\n        } else if (json.transactions.length < 1) {\n          console.log(\"No Transactions Found\");\n        } else {\n          json.transactions.map(tx => {\n            fetch(txDetailsURL + tx)\n              .then(res => res.json())\n              .then(json => {\n                if (json.vin[0].cashAddress === addr) {\n                  time = new Date(json.time * 1000);\n                  amount = json.vout[0].value;\n                  txobj = {\n                    type: \"Sent\",\n                    amount: parseFloat(amount * price).toFixed(2),\n                    confirmations: json.confirmations,\n                    fees: json.fees,\n                    txid: json.txid,\n                    time: time.toGMTString()\n                  };\n                  transactions.push(txobj);\n                } else {\n                  time = new Date(json.time * 1000);\n                  json.vout.map(vout => {\n                    if (!vout.scriptPubKey.cashAddrs) {\n                      return false;\n                    }\n                    address = vout.scriptPubKey.cashAddrs;\n                    if (address.indexOf(addr) > -1) {\n                      amount = vout.value;\n                    }\n                    return true;\n                  });\n                  txobj = {\n                    type: \"Received\",\n                    amount: parseFloat(amount * price).toFixed(2),\n                    confirmations: json.confirmations,\n                    fees: json.fees,\n                    txid: json.txid,\n                    time: time.toGMTString()\n                  };\n                  transactions.push(txobj);\n                }\n                transactions = transactions\n                  .sort(function(a, b) {\n                    return new Date(a.time) - new Date(b.time);\n                  })\n                  .reverse();\n                this.setState({\n                  transactions: transactions,\n                  isLoading: false\n                });\n              });\n            return true;\n          });\n        }\n      });\n  };\n\n  render() {\n    let { fiatSymbol, transactions } = this.state;\n    return (\n      <div style={styles.container}>\n        <Divider horizontal>History</Divider>\n        {transactions.map(tx => (\n          <div\n            style={{\n              textAlign: \"center\",\n              display: \"flex\",\n              margin: \"10px\",\n              color: tx.type === \"Sent\" ? \"red\" : \"green\",\n              fontSize: \"1.2rem\"\n            }}\n            key={tx.txid}\n          >\n            {tx.type === \"Sent\" ? <Icon type=\"rise\" /> : <Icon type=\"fall\" />}\n            <div style={styles.spacer} /> {tx.type}\n            <div style={styles.spacer} /> {fiatSymbol}\n            {tx.amount}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    color: \"black\",\n    alignItems: \"center\",\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  },\n  spacer: {\n    flex: 1\n  }\n};\n","import React, { Component } from \"react\";\nimport QRCode from \"qrcode.react\";\nimport { initWallet } from \"../scripts/bitcoincash\";\nimport { Divider } from \"semantic-ui-react\";\nimport { Button } from \"antd\";\nimport { Plugins } from \"@capacitor/core\";\nimport { isMobile } from \"react-device-detect\";\n\nconst { Share } = Plugins;\n\nexport default class Receive extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      addr: \"\",\n      bal: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    this.setState({\n      addr\n    });\n  }\n\n  copyAddress = () => {\n    let { addr } = this.state;\n    async function copy() {\n      try {\n        await Share.share({\n          title: \"Share\",\n          text: addr,\n          dialogTitle: \"Share your bitcoin cash address\"\n        });\n      } catch (err) {}\n    }\n    copy();\n    console.log(\"Address copied\");\n  };\n\n  renderCopyButton = () => {\n    let { addr } = this.state;\n    if (isMobile) {\n      return (\n        <div>\n          <Button size=\"large\" style={styles.button} onClick={this.copyAddress}>\n            Share\n          </Button>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <Button\n          size=\"large\"\n          style={styles.button}\n          onClick={() => navigator.clipboard.writeText(addr)}\n        >\n          Copy\n        </Button>\n      </div>\n    );\n  };\n\n  render() {\n    let { addr } = this.state;\n    return (\n      <div style={styles.container}>\n        <Divider horizontal>Receive</Divider>\n        <div>\n          <h4>Your Bitcoin Cash Address:</h4>\n          <QRCode style={styles.qr} value={addr} />\n          <div style={{ marginTop: \"5px\" }}>{addr}</div>\n          <div>{this.renderCopyButton()}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    textAlign: \"center\",\n    color: \"black\",\n    maxWidth: \"500px\",\n    margin: \"0 auto\"\n  },\n  button: {\n    backgroundColor: \"#0492CE\",\n    color: \"white\",\n    marginTop: \"10px\",\n    padding: \"0 50px\"\n  },\n  qr: {\n    marginTop: \"5px\"\n  }\n};\n","import React, { Component } from \"react\";\nimport Balance from \"./balance\";\nimport History from \"./history\";\nimport Send from \"./send\";\nimport Receive from \"./receive\";\nimport SwipeableViews from \"react-swipeable-views\";\n\nexport default class Main extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: false,\n      value: 0,\n      addr: \"\"\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  handleChange = value => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <div style={styles.container}>\n        <Balance />\n        <div>\n          <SwipeableViews index={1} resistance enableMouseEvents>\n            <div style={Object.assign({}, styles.tabs, styles.tab1)}>\n              <Send />\n            </div>\n            <div style={Object.assign({}, styles.tabs, styles.tab2)}>\n              <History />\n            </div>\n            <div style={Object.assign({}, styles.tabs, styles.tab3)}>\n              <Receive />\n            </div>\n          </SwipeableViews>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    textAlign: \"center\",\n    fontFamily: \"Questrial\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    color: \"black\"\n  },\n  tabs: {\n    padding: 15,\n    minHeight: 100,\n    color: \"#fff\"\n  },\n  tab1: {\n    backgroundColor: \"white\"\n  },\n  tab2: {\n    backgroundColor: \"white\",\n    overflow: \"\"\n  },\n  tab3: {\n    backgroundColor: \"white\",\n    overflow: \"hidden\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem } from \"reactstrap\";\nimport { Switch, Select, Icon, Modal, Input } from \"antd\";\n\nconst Option = Select.Option;\nconst { TextArea } = Input;\n\nconst FiatCurrency = [\n  {\n    currency: \"Indian Rupee\",\n    ticker: \"INR\",\n    symbol: \"₹\"\n  },\n  {\n    currency: \"United States Dollar\",\n    ticker: \"USD\",\n    symbol: \"$\"\n  }\n];\nconst DisplayCurrency = [\"Fiat\", \"Bitcoin Cash\"];\n\nexport default class Settings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fiatCurrency: \"\",\n      displayCurrency: \"\",\n      importModal: false,\n      importSeed: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let fiatCurrency = localStorage.getItem(\"fiat-currency\");\n    let displayCurrency = localStorage.getItem(\"display-currency\");\n    if (!fiatCurrency) {\n      fiatCurrency = \"INR\";\n    }\n    if (!displayCurrency) {\n      displayCurrency = \"Fiat\";\n    }\n    this.setState({\n      fiatCurrency,\n      displayCurrency\n    });\n  }\n\n  fiatCurrencyToogle = value => {\n    this.setState({\n      fiatCurrency: value\n    });\n    localStorage.setItem(\"fiat-currency\", value);\n  };\n\n  displayCurrencyToogle = value => {\n    this.setState({\n      displayCurrency: value\n    });\n    localStorage.setItem(\"display-currency\", value);\n  };\n\n  displayPriceToggle = checked => {\n    if (checked) {\n      localStorage.setItem(\"display-price\", \"On\");\n    } else {\n      localStorage.setItem(\"display-price\", \"Off\");\n    }\n  };\n\n  importModalToggle = importModal => {\n    this.setState({\n      importModal\n    });\n  };\n\n  onSeedEnter = item => {\n    this.setState({\n      importSeed: item.target.value\n    });\n  };\n\n  importSeed = () => {\n    let { importSeed } = this.state;\n    if (!importSeed) {\n      return console.log(\"No seed detected\");\n    }\n    localStorage.getItem(\"wallet\", importSeed);\n  };\n\n  render() {\n    let { fiatCurrency, displayCurrency, importSeed } = this.state;\n    return (\n      <div>\n        <ListGroup>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Fiat Currency</div>\n              <div style={styles.spacer} />\n              <div>\n                <Select\n                  defaultValue={fiatCurrency}\n                  style={{ width: 80 }}\n                  onChange={this.fiatCurrencyToogle}\n                >\n                  {FiatCurrency.map(item => (\n                    <Option key={item.ticker} value={item.ticker}>\n                      {item.ticker}\n                    </Option>\n                  ))}\n                </Select>\n              </div>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Display Currency</div>\n              <div style={styles.spacer} />\n              <Select\n                defaultValue={displayCurrency}\n                style={{ width: 120 }}\n                onChange={this.displayCurrencyToogle}\n              >\n                {DisplayCurrency.map(item => (\n                  <Option key={item} value={item}>\n                    {item}\n                  </Option>\n                ))}\n              </Select>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Display Price</div>\n              <div style={styles.spacer} />\n              <div>\n                <Switch defaultChecked onChange={this.displayPriceToggle} />\n              </div>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>\n            <div style={styles.container}>\n              <div>Recover Wallet</div>\n              <div style={styles.spacer} />\n              <div>\n                <Icon\n                  type=\"right\"\n                  onClick={() => this.importModalToggle(true)}\n                />\n                <Modal\n                  title=\"Recover Wallet\"\n                  centered\n                  visible={this.state.importModal}\n                  onOk={this.importSeed}\n                  onCancel={() => this.importModalToggle(false)}\n                >\n                  <TextArea\n                    placeholder=\"Enter the seed to recover your wallet\"\n                    autosize={{\n                      minRows: 3,\n                      maxRows: 6\n                    }}\n                    value={importSeed}\n                    onChange={this.onSeedEnter.bind(this)}\n                  />\n                </Modal>\n              </div>\n            </div>\n          </ListGroupItem>\n          <ListGroupItem>Advanced</ListGroupItem>\n        </ListGroup>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  spacer: {\n    flex: 1\n  }\n};\n","import React, { Component } from \"react\";\n\nexport default class About extends Component {\n  render() {\n    return (\n      <div style={styles.container}>\n        <h3>About Bitcoin Cash:</h3>\n        <p>\n          Bitcoin Cash is a peer-to-peer electronic cash system. It's a\n          permissionless, decentralized cryptocurrency that requires no trusted\n          third parties and no central bank.\n        </p>\n        <hr className=\"my-2\" />\n        <h3>Key Features:</h3>\n        <ol>\n          <li>Fast</li>\n          <li>Reliable</li>\n          <li>Low Fees</li>\n          <li>Simple</li>\n          <li>Stable</li>\n          <li>Secure</li>\n        </ol>\n        <hr className=\"my-2\" />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    flex: 1,\n    padding: \"10px\"\n  }\n};\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/tools/navbars/header\";\nimport Main from \"./screens/main\";\nimport Settings from \"./screens/settings\";\nimport About from \"./screens/about\";\nimport { createWallet, initWallet } from \"./scripts/bitcoincash\";\n\nlocalStorage.setItem(\"network\", \"testnet\");\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: false,\n      value: 0,\n      addr: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let wallet = localStorage.getItem(\"wallet\");\n    if (!wallet) {\n      console.log(\"No wallet detected\");\n      let seed = createWallet();\n      console.log(\"New wallet created: \" + seed);\n    }\n    let addr = initWallet(localStorage.getItem(\"wallet\"));\n    this.setState({\n      addr\n    });\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n\n  render() {\n    return (\n      <Router>\n        <div style={styles.container}>\n          <Header isOpen={this.state.collapsed} onClick={this.toggleNavbar} />\n          <Route path=\"/\" exact component={Main} />\n          <Route path=\"/settings/\" component={Settings} />\n          <Route path=\"/about/\" component={About} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    fontFamily: \"Questrial\",\n    flexDirection: \"column\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    minHeight: \"100vh\"\n  },\n  spacer: {\n    flex: \"1\"\n  },\n  tabs: {\n    padding: 15,\n    minHeight: 100,\n    color: \"#fff\"\n  },\n  tab1: {\n    backgroundColor: \"white\"\n  },\n  tab2: {\n    backgroundColor: \"white\",\n    overflow: \"\"\n  },\n  tab3: {\n    backgroundColor: \"white\",\n    overflow: \"hidden\"\n  }\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}